spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 20000




  data:
     mongodb:
       uri: mongodb://localhost:27017/fitnessactivity
       database: fitnessactivity
server:
  port: 4001
eureka:
 client:
   service-url:
     defaultZone: http://localhost:8761/eureka/

 #instance:
   #preferIpAddress: true
   #ip-address: host.docker.internal
logging:
  level:
    root: INFO

rabbitmq:
  exchange:
    name: fitness.exchange
  queue:
    name: activity.queue
  routing:
    key: activity.tracking


# âœ… Actuator properties
management:
  endpoints:
    web:
      exposure:
        include: "*"  # Expose all endpoints (or use "health,info" for limited exposure)
  endpoint:
    health:
      show-details: always  # Shows full health details

resilience4j:
  circuitbreaker:
    instances:
      userValidationService:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        recordExceptions:
          - org.springframework.web.reactive.function.client.WebClientResponseException
          - java.io.IOException
        ignoreExceptions:
          - com.ln.fitness.activity_service.excption.UserNotFoundException
